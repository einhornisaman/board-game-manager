<?php
/**
 * Plugin Name: Board Game Manager Simple
 * Description: Simplified version with basic BGG integration
 * Version: 1.0.0
 * Author: Your Name
 * Text Domain: board-game-manager
 */

// If this file is called directly, abort.
if (!defined('WPINC')) {
    die;
}

// Define plugin constants
define('BGM_VERSION', '1.0.0');
define('BGM_PLUGIN_DIR', plugin_dir_path(__FILE__));
define('BGM_PLUGIN_URL', plugin_dir_url(__FILE__));

/**
 * Plugin Activation
 */
function bgm_activate() {
    global $wpdb;
    $charset_collate = $wpdb->get_charset_collate();
    
    // Define table name
    $games_table = $wpdb->prefix . 'bgm_games';
    
    // Include WordPress database upgrade functions
    require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
    
    // Create games table
    $sql = "CREATE TABLE $games_table (
        `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
        `name` varchar(255) NOT NULL,
        `thumb` varchar(255) DEFAULT NULL,
        `minplayers` int(11) DEFAULT NULL,
        `maxplayers` int(11) DEFAULT NULL,
        `minplaytime` int(11) DEFAULT NULL,
        `maxplaytime` int(11) DEFAULT NULL,
        `complexity` decimal(3,2) DEFAULT NULL,
        `gamecats` text DEFAULT NULL,
        `gamemechs` text DEFAULT NULL,
        `bgglink` varchar(255) DEFAULT NULL,
        `rating` decimal(3,1) DEFAULT NULL,
        `qty` int(11) DEFAULT 1,
        `qtyrented` int(11) DEFAULT 0,
        `bgg_id` int(11) DEFAULT NULL,
        PRIMARY KEY (`id`),
        UNIQUE KEY `bgg_id` (`bgg_id`)
    ) $charset_collate;";
    
    dbDelta($sql);
}
register_activation_hook(__FILE__, 'bgm_activate');

/**
 * Import a game from BoardGameGeek API - with XML processing
 */
function bgm_import_game_from_bgg($bgg_id) {
    // Simple API call with basic error handling
    $url = 'https://boardgamegeek.com/xmlapi2/thing?stats=1&id=' . $bgg_id;
    $response = wp_remote_get($url);
    
    if (is_wp_error($response)) {
        return [
            'success' => false,
            'message' => "Failed to connect to BGG API: " . $response->get_error_message()
        ];
    }
    
    $body = wp_remote_retrieve_body($response);
    
    // Process XML
    libxml_use_internal_errors(true);
    $xml = simplexml_load_string($body);
    
    if ($xml === false) {
        return [
            'success' => false,
            'message' => "Failed to parse BGG API response."
        ];
    }
    
    // Extract basic game data
    try {
        $id = (string)$xml->item->attributes()->id;
        $name = (string)$xml->item->name[0]->attributes()->value;
        $thumbnail = (string)$xml->item->thumbnail;
        $minplayers = (string)$xml->item->minplayers['value'];
        $maxplayers = (string)$xml->item->maxplayers['value'];
        
        return [
            'success' => true,
            'id' => $id,
            'name' => $name,
            'thumbnail' => $thumbnail,
            'minplayers' => $minplayers,
            'maxplayers' => $maxplayers
        ];
    } catch (Exception $e) {
        return [
            'success' => false,
            'message' => "Error processing game data: " . $e->getMessage()
        ];
    }
}

/**
 * Admin Menu Setup
 */
function bgm_admin_menu() {
    add_menu_page(
        'Board Game Manager',
        'Board Games',
        'manage_options',
        'board-game-manager',
        'bgm_admin_page',
        'dashicons-games',
        30
    );
    
    add_submenu_page(
        'board-game-manager',
        'Import Game',
        'Import Game',
        'manage_options',
        'bgm-import',
        'bgm_import_page'
    );
}
add_action('admin_menu', 'bgm_admin_menu');

/**
 * Admin Page
 */
function bgm_admin_page() {
    ?>
    <div class="wrap">
        <h1>Board Game Manager</h1>
        <p>Manage your board game collection here.</p>
        
        <a href="<?php echo admin_url('admin.php?page=bgm-import'); ?>" class="button button-primary">Import Games</a>
    </div>
    <?php
}

/**
 * Import Page
 */
function bgm_import_page() {
    // Process form if submitted
    if (isset($_POST['bgg_id']) && !empty($_POST['bgg_id'])) {
        $bgg_id = intval($_POST['bgg_id']);
        $result = bgm_import_game_from_bgg($bgg_id);
        
        if ($result['success']) {
            echo '<div class="notice notice-success"><p>Game data retrieved successfully!</p>';
            echo '<p>Name: ' . esc_html($result['name']) . '<br>';
            echo 'ID: ' . esc_html($result['id']) . '<br>';
            echo 'Players: ' . esc_html($result['minplayers']) . '-' . esc_html($result['maxplayers']) . '</p></div>';
        } else {
            echo '<div class="notice notice-error"><p>Error: ' . esc_html($result['message']) . '</p></div>';
        }
    }
    ?>
    <div class="wrap">
        <h1>Import Game</h1>
        <p>Enter a BoardGameGeek ID to import a game.</p>
        
        <form method="post">
            <input type="number" name="bgg_id" placeholder="BGG ID (e.g. 174430)" required>
            <button type="submit" class="button button-primary">Import Game</button>
        </form>
    </div>
    <?php
}

/**
 * Shortcode for displaying games
 */
function bgm_shortcode() {
    return '<p>Board Game Collection would display here.</p>';
}
add_shortcode('board_game_collection', 'bgm_shortcode');